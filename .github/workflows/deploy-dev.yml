name: Deploy Subgraph to Dev Environment

on:
  push:
    branches:
      - main
      - DAO-*
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no changes detected'
        required: false
        default: 'false'
        type: boolean

env:
  NODE_VERSION: '22'

jobs:
  deploy-dev:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci

      - name: Authenticate with The Graph Studio
        run: npx graph auth $GRAPH_DEPLOY_KEY
        env:
          GRAPH_DEPLOY_KEY: ${{ secrets.GRAPH_DEPLOY_KEY }}

      - name: Prepare dev environment
        run: |
          npm run prepare:dev

      - name: Generate code
        run: |
          npm run codegen

      - name: Build subgraph
        run: |
          npm run build

      - name: Deploy to The Graph Studio (Dev)
        run: |
          # Get version from package.json and append commit SHA
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          COMMIT_SHA=${GITHUB_SHA:0:7}
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          VERSION="${PACKAGE_VERSION}-${TIMESTAMP}-${COMMIT_SHA}"
          
          echo "Deploying with version: $VERSION"
          echo "Base version: $PACKAGE_VERSION"
          
          # Deploy with version using npx to use local Graph CLI
          npx graph deploy --node https://api.studio.thegraph.com/deploy/ --version-label $VERSION rootstock-collective-governance-subgraph
        env:
          GRAPH_STUDIO_ACCESS_TOKEN: ${{ secrets.GRAPH_STUDIO_ACCESS_TOKEN }}

      - name: Verify deployment
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          COMMIT_SHA=${GITHUB_SHA:0:7}
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          VERSION="${PACKAGE_VERSION}-${TIMESTAMP}-${COMMIT_SHA}"
          
          echo "Subgraph deployed to dev environment successfully!"
          echo "Subgraph ID: rootstockcollective-governance-dev"
          echo "Network: rootstock-testnet"
          echo "Version: $VERSION"
